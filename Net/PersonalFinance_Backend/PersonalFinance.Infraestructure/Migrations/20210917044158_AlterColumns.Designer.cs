// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalFinance.Infraestructure.DataAcces.Context;

namespace PersonalFinance.Infraestructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210917044158_AlterColumns")]
    partial class AlterColumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.BudgetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("DescriptionTypeBudget")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_BudgetType");

                    b.ToTable("BudgetType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7345),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Mercado"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7590),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Mercado diario"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7609),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Pago deudas"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7619),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Ahorros"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7629),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Inversiones"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7664),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Comidas rapidas"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7674),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Vestuario"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7683),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Electrodomesticos"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7692),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Computador"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7709),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Transporte"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7718),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Salud"
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 340, DateTimeKind.Local).AddTicks(7727),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeBudget = "Arriendo"
                        });
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.Debt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CreditAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("CurrentAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("InArrears")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlyInterest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("NumberMonthsIntArrears")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<bool>("Paid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TermInMonths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ThirdPartyId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Debt");

                    b.HasIndex("CreationDate")
                        .HasDatabaseName("IX_Debt_CreationDate");

                    b.HasIndex("ThirdPartyId")
                        .HasDatabaseName("IX_Debt_ThirdPartyId");

                    b.ToTable("Debt");
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.DebtDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmortizedCapital")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DebtId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("FeeValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("InterestValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OutstandingCapital")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK_DebtDetail");

                    b.HasIndex("CreationDate")
                        .HasDatabaseName("IX_TBL_DebtDetail_CreationDate");

                    b.HasIndex("DebtId")
                        .HasDatabaseName("IX_TBL_DebtDetail_DebtId");

                    b.ToTable("DebtDetail");
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.FinancialMovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssociatedDebtId")
                        .HasColumnType("int");

                    b.Property<int?>("AssociatedSavingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MovementDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovementTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("MovementValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id")
                        .HasName("PK_FinancialMovement");

                    b.HasIndex("AssociatedDebtId")
                        .HasDatabaseName("IX_FinancialMovement_AssociatedDebtId");

                    b.HasIndex("AssociatedSavingId")
                        .HasDatabaseName("IX_FinancialMovement_AssociatedSavingId");

                    b.HasIndex("CreationDate")
                        .HasDatabaseName("IX_FinancialMovement_CreationDate");

                    b.HasIndex("MovementTypeId")
                        .HasDatabaseName("IX_FinancialMovement_MovementTypeId");

                    b.ToTable("FinancialMovement");
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.MonthlyBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BudgedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BudgetTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("ExpectedSpending")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<int>("FinancialMovementId")
                        .HasColumnType("int");

                    b.Property<decimal>("GeneratedSpending")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK_MonthlyBudget");

                    b.HasIndex("BudgetTypeId")
                        .HasDatabaseName("IX_MonthlyBudget_BudgetTypeId");

                    b.HasIndex("CreationDate")
                        .HasDatabaseName("IX_MonthlyBudget_CreationDate");

                    b.HasIndex("FinancialMovementId")
                        .HasDatabaseName("IX_MonthlyBudget_FinancialMovementId");

                    b.ToTable("MonthlyBudget");
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.MovementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("DescriptionTypeMovement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MovementTypeSign")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("PK_MovementType");

                    b.ToTable("MovementType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2021, 9, 16, 23, 41, 52, 326, DateTimeKind.Local).AddTicks(3681),
                            CreationUser = "Migration",
                            Deleted = false,
                            DescriptionTypeMovement = "Salario",
                            MovementTypeSign = 1
                        });
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.Saving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentBalanceSaved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("InArrears")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberMonthsIntArrears")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SavingDescription")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("");

                    b.Property<bool>("SavingFinished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("SavingGoal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TermInMonths")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ThirdPartyId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Saving");

                    b.HasIndex("CreationDate")
                        .HasDatabaseName("IX_Saving_CreationDate");

                    b.HasIndex("ThirdPartyId")
                        .HasDatabaseName("IX_Saving_ThirdPartyId");

                    b.ToTable("Saving");
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.SavingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Retired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("SavingId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id")
                        .HasName("PK_SavingDetail");

                    b.HasIndex("CreationDate")
                        .HasDatabaseName("IX_TBL_SavingDetail_CreationDate");

                    b.HasIndex("SavingId")
                        .HasDatabaseName("IX_TBL_SavingDetail_SavingId");

                    b.ToTable("SavingDetail");
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.ThirdParty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificationUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NaturalPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("Id")
                        .HasName("PK_ThirdParty");

                    b.ToTable("ThirdParty");
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.Debt", b =>
                {
                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.ThirdParty", null)
                        .WithMany()
                        .HasForeignKey("ThirdPartyId")
                        .HasConstraintName("FK_Debt_ThirdPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.DebtDetail", b =>
                {
                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.Debt", null)
                        .WithMany()
                        .HasForeignKey("DebtId")
                        .HasConstraintName("FK_DebtDetail_DebtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.FinancialMovement", b =>
                {
                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.Debt", null)
                        .WithMany()
                        .HasForeignKey("AssociatedDebtId")
                        .HasConstraintName("FK_FinancialMovement_AssociatedDebtId");

                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.Saving", null)
                        .WithMany()
                        .HasForeignKey("AssociatedSavingId")
                        .HasConstraintName("FK_FinancialMovement_AssociatedSavingId");

                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.MovementType", null)
                        .WithMany()
                        .HasForeignKey("MovementTypeId")
                        .HasConstraintName("FK_FinancialMovement_MovementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.MonthlyBudget", b =>
                {
                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.BudgetType", null)
                        .WithMany()
                        .HasForeignKey("BudgetTypeId")
                        .HasConstraintName("FK_MonthlyBudget_BudgetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.FinancialMovement", null)
                        .WithMany()
                        .HasForeignKey("FinancialMovementId")
                        .HasConstraintName("FK_MonthlyBudget_FinancialMovementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.Saving", b =>
                {
                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.ThirdParty", null)
                        .WithMany()
                        .HasForeignKey("ThirdPartyId")
                        .HasConstraintName("FK_Saving_ThirdPartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalFinance.Infraestructure.DataAcces.Entities.SavingDetail", b =>
                {
                    b.HasOne("PersonalFinance.Infraestructure.DataAcces.Entities.Saving", null)
                        .WithMany()
                        .HasForeignKey("SavingId")
                        .HasConstraintName("FK_SavingDetail_SavingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
